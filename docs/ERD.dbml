Table users {
  id int [pk, increment]
  name varchar(255) [not null]
  email varchar(255) [unique, not null]
  email_verified_at timestamp [default: `CURRENT_TIMESTAMP`]
  password varchar(255) [not null]
  role enum('admin', 'cashier') [default: `'cashier'`, not null]
  remember_token varchar(100) [default: null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table tables {
  id int [pk, increment]
  name varchar(100) [unique, not null]
  hourly_rate decimal(10,2) [not null]
  status enum('available', 'occupied', 'maintenance') [default: `'available'`, not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table products {
  id int [pk, increment]
  name varchar(255) [not null]
  price decimal(10,2) [not null]
  category varchar(100) [default: null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table transactions {
  id int [pk, increment]
  table_id int [not null]
  user_id int [not null]
  started_at timestamp [not null]
  ended_at timestamp [default: null]
  duration_minutes int [default: 0]
  total decimal(10,2) [default: 0.00]
  payment_method varchar(50) [not null]
  cash_received decimal(10,2) [default: null]
  change_amount decimal(10,2) [default: null]
  status enum('ongoing', 'completed', 'cancelled') [default: `'ongoing'`, not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table transaction_items {
  id int [pk, increment]
  transaction_id int [not null]
  product_id int [not null]
  quantity int [default: 1, not null]
  price_per_item decimal(10,2) [not null]
  total_price decimal(10,2) [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Ref: transactions.table_id >- tables.id [delete: restrict, update: cascade]
Ref: transactions.user_id >- users.id [delete: restrict, update: cascade]
Ref: transaction_items.transaction_id >- transactions.id [delete: cascade, update: cascade]
Ref: transaction_items.product_id >- products.id [delete: restrict, update: cascade]